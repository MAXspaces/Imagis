// <auto-generated />
using System;
using Imagist_Backend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Imagist_Backend.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240103171741_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Imagist_Library.Model.Album", b =>
                {
                    b.Property<long>("AlbumId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("AlbumDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AlbumName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("OwingUserUserId")
                        .HasColumnType("bigint");

                    b.HasKey("AlbumId");

                    b.HasIndex("OwingUserUserId");

                    b.ToTable("Albums");
                });

            modelBuilder.Entity("Imagist_Library.Model.Photo", b =>
                {
                    b.Property<long>("PhotoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("AlbumId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Device")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ObjectId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("OwingUserUserId")
                        .HasColumnType("bigint");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.Property<string>("format")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("height")
                        .HasColumnType("int");

                    b.HasKey("PhotoId");

                    b.HasIndex("AlbumId");

                    b.HasIndex("OwingUserUserId");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("Imagist_Library.Model.User", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Imagist_Library.Model.Album", b =>
                {
                    b.HasOne("Imagist_Library.Model.User", "OwingUser")
                        .WithMany("Albums")
                        .HasForeignKey("OwingUserUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OwingUser");
                });

            modelBuilder.Entity("Imagist_Library.Model.Photo", b =>
                {
                    b.HasOne("Imagist_Library.Model.Album", "Album")
                        .WithMany("Photos")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Imagist_Library.Model.User", "OwingUser")
                        .WithMany("Photos")
                        .HasForeignKey("OwingUserUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Album");

                    b.Navigation("OwingUser");
                });

            modelBuilder.Entity("Imagist_Library.Model.Album", b =>
                {
                    b.Navigation("Photos");
                });

            modelBuilder.Entity("Imagist_Library.Model.User", b =>
                {
                    b.Navigation("Albums");

                    b.Navigation("Photos");
                });
#pragma warning restore 612, 618
        }
    }
}
